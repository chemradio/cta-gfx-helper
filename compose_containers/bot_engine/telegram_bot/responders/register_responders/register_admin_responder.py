from telegram import InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardRemove

import config
from py_gfxhelper_lib.user_enums.user_permission import UserPermission
from telegram_bot.bot_instance import bot


class RegisterAdminResponder:
    @staticmethod
    async def register_applied(admin_id, user_id, first_name: str = ""):
        register_markup = InlineKeyboardMarkup(
            [
                [
                    InlineKeyboardButton(
                        "‚úÖ –û–¥–æ–±—Ä–∏—Ç—å",
                        callback_data=f"approve_{user_id}",
                    )
                ],
                [
                    InlineKeyboardButton(
                        "‚ùå –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å",
                        callback_data=f"block_{user_id}",
                    )
                ],
            ]
        )
        return await bot.send_message(
            chat_id=admin_id,
            text="üë§ üí° –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é.\n\n–ò–º—è: {first_name}\nTelegram ID: {telegram_id}".format(
                first_name=first_name, telegram_id=user_id
            ),
            reply_markup=register_markup,
            parse_mode=config.GLOBAL_MESSAGE_PARSE_MODE,
        )

    @staticmethod
    async def register_approved(admin_id, user_id, first_name):
        return await bot.send_message(
            chat_id=admin_id,
            text="üë§ ‚úÖ –ó–∞—è–≤–∫–∞ –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –æ–¥–æ–±—Ä–µ–Ω–∞.\n\n–ò–º—è: {first_name}\nTelegram ID: {telegram_id}".format(
                first_name=first_name, telegram_id=user_id
            ),
            reply_markup=ReplyKeyboardRemove(),
            parse_mode=config.GLOBAL_MESSAGE_PARSE_MODE,
        )

    @staticmethod
    async def register_blocked(admin_id, user_id, first_name):
        return await bot.send_message(
            chat_id=admin_id,
            text="üë§ ‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.\n\n–ò–º—è: {first_name}\nTelegram ID: {telegram_id}".format(
                first_name=first_name, telegram_id=user_id
            ),
            reply_markup=ReplyKeyboardRemove(),
            parse_mode=config.GLOBAL_MESSAGE_PARSE_MODE,
        )

    @staticmethod
    async def register_pended(admin_id, user_id, first_name):
        return await bot.send_message(
            chat_id=admin_id,
            text="üë§ ‚ùî –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –æ–∂–∏–¥–∞–Ω–∏–∏.\n\n–ò–º—è: {first_name}\nTelegram ID: {telegram_id}".format(
                first_name=first_name, telegram_id=user_id
            ),
            reply_markup=ReplyKeyboardRemove(),
            parse_mode=config.GLOBAL_MESSAGE_PARSE_MODE,
        )

    #################################
    # /users comand for admin lists users in different categoried
    # following responders are for allowing / blocking / pending existing users

    @staticmethod
    async def list_user(admin_id, user_status: UserPermission, user_id, first_name):
        match user_status:
            case UserPermission.APPROVED:
                text = "üë§ ‚úÖ –û–¥–æ–±—Ä–µ–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.\n\n–ò–º—è: {first_name}\nTelegram ID: {telegram_id}".format(
                    first_name=first_name, telegram_id=user_id
                )

            case UserPermission.PENDING:
                text = "üë§ ‚ùî –ù–µ–æ–¥–æ–±—Ä–µ–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.\n\n–ò–º—è: {first_name}\nTelegram ID: {telegram_id}".format(
                    first_name=first_name, telegram_id=user_id
                )

            case UserPermission.BLOCKED:
                text = "üë§ ‚ùå –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.\n\n–ò–º—è: {first_name}\nTelegram ID: {telegram_id}".format(
                    first_name=first_name, telegram_id=user_id
                )

            case _:
                text = "unspecified user status type"

        register_markup = InlineKeyboardMarkup(
            [
                [
                    InlineKeyboardButton(
                        "‚úÖ –û–¥–æ–±—Ä–∏—Ç—å",
                        callback_data=f"approve_{user_id}",
                    )
                ],
                [
                    InlineKeyboardButton(
                        "‚ùå –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å",
                        callback_data=f"block_{user_id}",
                    )
                ],
                [
                    InlineKeyboardButton(
                        "‚ùî –†–µ—à–∏—Ç—å –ø–æ–∑–∂–µ",
                        callback_data=f"pend_{user_id}",
                    )
                ],
            ]
        )

        return await bot.send_message(
            chat_id=admin_id,
            text=text,
            reply_markup=register_markup,
            parse_mode=config.GLOBAL_MESSAGE_PARSE_MODE,
        )

    @staticmethod
    async def empty_users_list(admin_id):
        return await bot.send_message(
            chat_id=admin_id,
            text="üë§... –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å —Ç–∞–∫–∏–º –∫—Ä–∏—Ç–µ—Ä–∏–µ–º –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç",
            reply_markup=ReplyKeyboardRemove(),
            parse_mode=config.GLOBAL_MESSAGE_PARSE_MODE,
        )
